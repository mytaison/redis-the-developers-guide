{"id":"a57dde","fileName":"my-grizzled-lesson-notebook.json","name":"Stack -> Modules :: RediSearch","cells":[{"id":"e8c955","type":"markdown","content":"**Notes**\n\n* RediSearch is part of the RediStack\n* It has capabilities to do complex search and queries\n* You need to create indexs for search specific properties of hashes \n* Query -> exact result, Search -> like/close result\n* Index types: NUMERIC (number), GEO (geographic coordinates), VECTOR (similarities), TAG (used for exact string matchup), TEXT (supports fuzzy type, typos etc.)\n* Stop words are automatically removed from tag and text queries (a, an ,the,  be, is , are, was, will, at, as, but, by, for, if, in, to, into, no, not, of, on, or, such, this, that, these, it, then, they, their, there, with)\n* Text query -> all stop words, punctuations and spaces are removed automatically as a pre-processing part\n* Stemming is used to reduce words down to base form.\n\n**Prefix Search Pre-processing**\n\n* Split on spaces\n* Append a * to the last term and maybe to other terms too.\n* Maybe wrap all terms with %% for mis typo\n* Join with a space or | \n"},{"id":"2701e9","type":"redis","content":"HSET cars#a1 name 'Fast Car' color Red year 1950\nHSET cars#b1 name 'Car' color Red year 1970\nHSET cars#c1 name 'Old Car' color Blue year 1920\nHSET cars#d1 name 'New Car' color Blue year 1990\n\n// Creating Indexs\nFT.CREATE idx:cars ON HASH PREFIX 1 cars# \n    SCHEMA name TEXT year NUMERIC color TAG\n\n// List of Indexs\nFT._LIST \n\n// Making Queries\n// All cars with name \"Fast Car\"\nFT.SEARCH idx:cars '@name:(Fast Car)'\n// If @key is not mentioned, then redis will search the term in all TEXT fields\nFT.SEARCH idx:cars 'Fast Car'\n// Fuzzy Search\n// % in both side means 1 mismatch letter to be considered\nFT.SEARCH idx:cars '@name:(%Gast%)' // actually Fast\n// 2 mismatch letters\nFT.SEARCH idx:cars '@name:(%%Ollld%%)' // actually Old\n// Prefix Search\n// Add * to the string for prefix search, minimum 2 characters\nFT.SEARCH idx:cars '@name:(Ne*)'\n\n\n// All blue cars\nFT.SEARCH idx:cars '@color:{Blue}'\n// Not blue '-@color:{Blue}'\n// Blue or Red '@color:{Blue | Red}'\n// Multiword '@color:{Light\\ Blue}'\n\n\n// All cars between 1950 and 1990\nFT.SEARCH idx:cars '@year:[1950 1990]' \n// Greater than equal to 1950 '@year:[1950 +inf]'\n// Greater than 1950 '@year:[(1950 +inf]'\n// Less than equal to 1950 '@year:[-inf 1950]'\n// Less than 1950 '@year:[-inf (1950]'\n// Not between 1950 - 1990 '-@year:[1950 1990]'\n\nFT.DROPINDEX idx:cars \nFT.DROPINDEX idx:items\nDEL cars#a1 cars#b1 cars#c1 cars#d1\n"},{"id":"1712667342615","type":"redis","content":"// Query Explanation\n// FT.INFO idx:items \nFT.SEARCH idx:items '@ownerId:{03201d}'\n// FT.CREATE idx:items2 ON HASH PREFIX 1 items# \n//     SCHEMA ownerId TAG\n// FT.DROPINDEX idx:items2\n\n// FT.EXPLAINCLI idx:items '@ownerId:{03201d}'\nFT.EXPLAINCLI idx:items 'chair' \nFT.EXPLAINCLI idx:items 'chair -desk' \nFT.EXPLAINCLI idx:items '(@name:(\"chair\")=>{$weight:5.0}) | (@description:(\"chair\"))' "},{"id":"1712669783101","type":"redis","content":"// Query Performance Profiling\nFT.PROFILE idx:items SEARCH QUERY '%%chairs%%' LIMIT 0 0 \n"}],"createdAt":"2024-04-08T12:02:26.769Z"}